// import { UserConfig, defineConfig } from "vite";
// import path from "path";
// import builtins from "builtin-modules";
// import react from "@vitejs/plugin-react";

// const banner = `/*
// THIS IS A GENERATED/BUNDLED FILE BY VITE
// if you want to view the source, please visit the github repository of this plugin
// */
// `;

// export default defineConfig(async ({ mode }) => {
// 	const { resolve } = path;
// 	const prod = mode === "production";

// 	return {
// 		plugins: [react()],
// 		resolve: {
// 			alias: {
// 				"@": path.resolve(__dirname, "./src"),
// 			},
// 		},
// 		css: {
// 			modules: {
// 				localsConvention: "camelCaseOnly",
// 				generateScopedName: "[name]__[local]___[hash:base64:5]",
// 			},
// 		},
// 		// test: {
// 		// 	globals: true,
// 		// 	environment: "jsdom",
// 		// 	setupFiles: ["./vitest.setup.ts"],
// 		// 	deps: {
// 		// 		external: [/^obsidian$/, ...builtins],
// 		// 	},
// 		// },
// 		build: {
// 			// lib: {
// 			// 	entry: resolve(__dirname, "src/main.ts"),
// 			// 	name: "main",
// 			// 	fileName: () => "main.js",
// 			// 	formats: ["cjs"],
//       // },
//       outdir: 'dist',
// 			minify: prod,
// 			sourcemap: prod ? false : "inline",
//       // outDir: "./",
// 			cssCodeSplit: false,
// 			emptyOutDir: true, //false
// 			target: "es2022",
// 			rollupOptions: {
// 				input: {
// 					main: resolve(__dirname, "src/main.ts"),
// 					// styles: resolve(__dirname, "src/styles.css"),
// 				},
// 				output: {
// 					banner,
//           entryFileNames: "[name].js",
//           dir: './'
// 					// assetFileNames: "styles.css",
// 				},
// 				external: [
// 					"obsidian",
// 					"electron",
// 					"@codemirror/autocomplete",
// 					"@codemirror/collab",
// 					"@codemirror/commands",
// 					"@codemirror/language",
// 					"@codemirror/lint",
// 					"@codemirror/search",
// 					"@codemirror/state",
// 					"@codemirror/view",
// 					"@lezer/common",
// 					"@lezer/highlight",
// 					"@lezer/lr",
// 					...builtins,
// 				],
// 			},
// 		},
// 	} as UserConfig;
// });
